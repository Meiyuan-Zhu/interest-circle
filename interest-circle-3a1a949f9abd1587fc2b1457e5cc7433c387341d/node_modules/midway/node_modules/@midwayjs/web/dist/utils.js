"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCurrentDateString = exports.findLernaRoot = exports.parseNormalDir = void 0;
const bootstrap_1 = require("@midwayjs/bootstrap");
const path_1 = require("path");
const find_up_1 = require("find-up");
const fs_1 = require("fs");
const parseNormalDir = (baseDir, isTypescript = true) => {
    if (isTypescript) {
        // 这里要么就是 src 目录，要么就已经是根目录
        if (!(0, fs_1.existsSync)((0, path_1.join)(baseDir, 'package.json'))) {
            baseDir = (0, path_1.basename)(baseDir);
        }
        const isTypeScriptEnv = (0, bootstrap_1.isTypeScriptEnvironment)();
        if (isTypeScriptEnv) {
            return {
                baseDir: (0, path_1.join)(baseDir, 'src'),
                appDir: baseDir,
            };
        }
        else {
            return {
                baseDir: (0, path_1.join)(baseDir, 'dist'),
                appDir: baseDir,
            };
        }
    }
    else {
        // js baseDir
        return {
            baseDir,
            appDir: baseDir,
        };
    }
};
exports.parseNormalDir = parseNormalDir;
const findLernaRoot = (findRoot = process.cwd()) => {
    const userHome = process.env.HOME;
    return (0, find_up_1.sync)(directory => {
        if (find_up_1.sync.exists((0, path_1.join)(directory, 'lerna.json'))) {
            return directory;
        }
        if (directory === userHome) {
            return find_up_1.stop;
        }
    }, { cwd: findRoot, type: 'directory' });
};
exports.findLernaRoot = findLernaRoot;
const getCurrentDateString = (timestamp = Date.now()) => {
    const d = new Date(timestamp);
    return `${d.getFullYear()}-${(d.getMonth() + 1)
        .toString()
        .padStart(2, '0')}-${d.getDate().toString().padStart(2, '0')}`;
};
exports.getCurrentDateString = getCurrentDateString;
//# sourceMappingURL=utils.js.map