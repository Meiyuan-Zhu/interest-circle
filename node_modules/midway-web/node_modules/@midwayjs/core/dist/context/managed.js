"use strict";
/**
 * 用于抽象描述的属性、json、ref、set、map等内容
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagedObject = exports.ManagedProperty = exports.ManagedProperties = exports.ManagedMap = exports.ManagedSet = exports.ManagedList = exports.ManagedJSON = exports.ManagedReference = exports.ManagedValue = void 0;
const properties_1 = require("../definitions/properties");
const constants_1 = require("../common/constants");
class ManagedValue {
    constructor(value, valueType) {
        this.type = constants_1.KEYS.VALUE_ELEMENT;
        this.value = value;
        this.valueType = valueType || constants_1.VALUE_TYPE.STRING;
    }
}
exports.ManagedValue = ManagedValue;
class ManagedReference {
    constructor() {
        this.type = constants_1.KEYS.REF_ELEMENT;
    }
}
exports.ManagedReference = ManagedReference;
class ManagedJSON {
    constructor() {
        this.type = constants_1.KEYS.JSON_ELEMENT;
    }
}
exports.ManagedJSON = ManagedJSON;
class ManagedList extends Array {
    constructor() {
        super(...arguments);
        this.type = constants_1.KEYS.LIST_ELEMENT;
    }
}
exports.ManagedList = ManagedList;
class ManagedSet extends Set {
    constructor() {
        super(...arguments);
        this.type = constants_1.KEYS.SET_ELEMENT;
    }
}
exports.ManagedSet = ManagedSet;
class ManagedMap extends Map {
    constructor() {
        super(...arguments);
        this.type = constants_1.KEYS.MAP_ELEMENT;
    }
}
exports.ManagedMap = ManagedMap;
class ManagedProperties extends properties_1.ObjectProperties {
    constructor() {
        super(...arguments);
        this.type = constants_1.KEYS.PROPS_ELEMENT;
    }
}
exports.ManagedProperties = ManagedProperties;
class ManagedProperty {
    constructor() {
        this.type = constants_1.KEYS.PROPERTY_ELEMENT;
    }
}
exports.ManagedProperty = ManagedProperty;
class ManagedObject {
    constructor() {
        this.type = constants_1.KEYS.OBJECT_ELEMENT;
    }
}
exports.ManagedObject = ManagedObject;
//# sourceMappingURL=managed.js.map