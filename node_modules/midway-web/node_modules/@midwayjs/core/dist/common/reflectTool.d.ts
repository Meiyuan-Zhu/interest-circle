import 'reflect-metadata';
import { ReflectResult } from '@midwayjs/decorator';
/**
 * 以数组形式返回对象所有 property, 数组第一个元素是距离 o 最近的原型
 * @param target 对象，class 或者 function
 */
export declare function recursiveGetPrototypeOf(target: any): any[];
export declare function getOwnMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): ReflectResult;
/**
 * get metadata value of a metadata key on the prototype chain of an object and property
 * @param metadataKey metadata's key
 * @param target the target of metadataKey
 */
export declare function recursiveGetMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): ReflectResult[];
//# sourceMappingURL=reflectTool.d.ts.map