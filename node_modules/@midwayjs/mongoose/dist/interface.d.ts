import * as mongoose from 'mongoose';
interface M5 {
    ConnectionOptions: unknown;
}
interface M6 {
    ConnectOptions: unknown;
}
interface Plus {
    Connection: any;
}
declare type ExtractConnectionOptionsFromConnection<T extends (...args: any[]) => any> = Parameters<T>[1];
declare type ExtractConnectionOptions<T> = T extends M5 ? T['ConnectionOptions'] : T extends M6 ? T['ConnectOptions'] : T extends Plus ? ExtractConnectionOptionsFromConnection<T['Connection']['prototype']['openUri']> : never;
export type ConnectionOptions = ExtractConnectionOptions<typeof mongoose>;
export {};
//# sourceMappingURL=interface.d.ts.map