"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageSource = void 0;
const _ = require("../common/lodashWrap");
const util_1 = require("util");
/**
 * 多语言支持实现
 * 支持文件夹载入以及文件载入
 */
class MessageSource extends Map {
    constructor(defaultLocale) {
        super();
        this.defaultLocale = null;
        this.defaultLocale = defaultLocale;
    }
    async load(locale, res) {
        if (res.isFile()) {
            const messages = await res.getContentAsJSON();
            if (this.has(locale)) {
                _.assign(this.get(locale), messages);
            }
            else {
                this.set(locale, messages);
            }
        }
        if (res.isDir()) {
            const resources = await res.getSubResources();
            for (const resource of resources) {
                await this.load(locale, resource);
            }
        }
    }
    async loadUseFileName(res) {
        if (res.isFile()) {
            const messages = await res.getContentAsJSON();
            const locale = res.name;
            if (this.has(locale)) {
                _.assign(this.get(locale), messages);
            }
            else {
                this.set(locale, messages);
            }
        }
        if (res.isDir()) {
            const resources = await res.getSubResources();
            for (const resource of resources) {
                await this.loadUseFileName(resource);
            }
        }
    }
    getMessage(code, args, defaultMessage, locale) {
        let messages;
        if (locale) {
            messages = this.get(locale);
        }
        else {
            messages = this.get(this.defaultLocale);
        }
        if (!messages) {
            return null;
        }
        if (!messages[code]) {
            return defaultMessage;
        }
        if (args && args.length > 0) {
            args.unshift(messages[code]);
            // eslint-disable-next-line prefer-spread
            return util_1.format.apply(null, args);
        }
        return messages[code];
    }
}
exports.MessageSource = MessageSource;
//# sourceMappingURL=messageSource.js.map