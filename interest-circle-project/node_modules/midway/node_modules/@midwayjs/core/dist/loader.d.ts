import { MidwayContainer } from './context/midwayContainer';
import { IMidwayContainer } from './interface';
/**
 * @deprecated
 */
export declare class ContainerLoader {
    baseDir: any;
    applicationContext: MidwayContainer;
    isTsMode: any;
    preloadModules: any;
    disableConflictCheck: boolean;
    constructor({ baseDir, isTsMode, preloadModules, disableConflictCheck, }: {
        baseDir: any;
        isTsMode?: boolean;
        preloadModules?: any[];
        disableConflictCheck?: boolean;
    });
    initialize(): void;
    getApplicationContext(): IMidwayContainer;
    registerHook(hookKey: any, hookHandler: any): void;
    loadDirectory(loadOpts?: {
        baseDir?: string;
        loadDir?: string[];
        disableAutoLoad?: boolean;
        pattern?: string | string[];
        ignore?: string | string[];
    }): void;
    refresh(): Promise<void>;
    stop(): Promise<void>;
    loadLifeCycles(): Promise<void>;
}
//# sourceMappingURL=loader.d.ts.map