"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotFoundError = void 0;
class NotFoundError extends Error {
    constructor(identifier) {
        super(`${identifier} is not valid in current context`);
        this[NotFoundError.type] = NotFoundError.type;
    }
    static isClosePrototypeOf(ins) {
        return ins ? ins[NotFoundError.type] === NotFoundError.type : false;
    }
    updateErrorMsg(className) {
        const identifier = this.message.split(' is not valid in current context')[0];
        const msg = `${identifier} in class ${className} is not valid in current context`;
        this.message = msg;
    }
}
exports.NotFoundError = NotFoundError;
NotFoundError.type = Symbol.for('#NotFoundError');
//# sourceMappingURL=notFoundError.js.map